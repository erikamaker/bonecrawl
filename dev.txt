############################################################################################################################################################################################################################################################## 
#####    ENGINE PHASE    #####################################################################################################################################################################################################################################
############################################################################################################################################################################################################################################################## 
      

   1.) revise screen to show general and ability stats  
   2.) make clothes: hoodies, tee-shirts, jeans, sneakers (block+, durability-)  
   3.) make the staffs (see notes below)  
   4.) make the spells  
   4.) make the cave cracks  

   Staff
      - requires a blue or pink gem from the mines
      - requires a branch from a tree
      - pink gems are used in battle (@@action = cast, @@target = spell)
      - the pink spells are separate runes that a caster will put on it for you
         - rune 1: strip enemy of block 
         - rune 2: strip enemy of attack 
         - rune 3: stun enemy for a number of pages 
      - the blue staffs affect magic obstacles in the environment (think ocarina style)
      - uses soul power 

    Hoodies / Tee-shirts / Jeans / Sneakers
      :block+ , :quality 

    Magic rings 
      - never break 
      - forged by dark casters 
      - draw your life and soul every few pages
      - make you either invisible, or stronger 

    Tiles that are Mineable  
      - mine through holes in walls very much like how keys open doors 
      - mine for raw ore and gems 

    Apple Trees 
      - sometimes drop branches / apples if there isn't already one spawned 

    MagicDoors
      - can't open doors without a blue staff rune 
    
    MagicChests 
      - magically sealed chests, same as above. 

    MagicWildCard
      - random objects that are affected by magic, ad-hoc 

    Altar 
      - craft items / upgrade items OR sacrifice one key item (to progress story mode)
      - takes spirit power 
      - auto take the bone you get from the level's miniboss 
    
    Characters
      - talking, bartering, @@heck events, hints, gifts, fighting, repositioning (including following) 
      - different scripts based on speech ability (sometimes)
      - demons, trolls, casters, prisoners, goblins, hellions, 

    Random Generate Enemies   (chance of appearing based on certain conditions, then stays put until defeated)
      - big rat 
      - big spider 
      - squids
      - worms 
      - ravens 



   

############################################################################################################################################################################################################################################################## 
#####    STYLE GUIDE    ######################################################################################################################################################################################################################################
############################################################################################################################################################################################################################################################## 


# puts "	   - This is a boilerplate screen."
# puts "         Every line should be equal in"
# puts "         length. The final line may be"
# puts "         shorter or half.\n\n"    


# Every gamepiece that displays either an outcome or a passive backdrop will stack in this manner. 
# Every display will be a paragraph (or two) designated by a tick mark, with line breaks between each tick phrase (\n\n).
# Each tick phrase will display in the order they're loaded, due to the indexing on the level_x array in the main.rb runner file.  

# See idea for opening cut-scene. 

sleep 2
print Rainbow("\n\n\n	           - Bone Crawl - \n\n")
sleep 2
print Rainbow("Ch. 1. Escaping Goblin City\n\n").green
sleep 2
puts "	   - You wake up on the floor of"									 
puts "	     a mostly-empty dungeon cell.\n\n"
sleep 2
puts "	   - You're dressed in rags, and"									 
puts "	     someone's emptied your bag.\n\n"
sleep 2


############################################################################################################################################################################################################################################################## 
#####    LEVEL DESIGN / GAME MAKING PHASE    #################################################################################################################################################################################################################
############################################################################################################################################################################################################################################################## 


- design one fully functional and curated level of BoneCrawl. 
- build the level and have people beta test it / cycle until done. 


############################################################################################################################################################################################################################################################## 
#####    COMMERCIAL PHASE    #################################################################################################################################################################################################################################
############################################################################################################################################################################################################################################################## 


- start generating hype about the game and advertise. 
- release the engine on the website for $1. comes with first level free. 
- for $1 subscription, you'll get updated engine as applied / monthly chapter. 
- beta release / debug / re-release cycle
- find partner to port to mobile 
- generate hype for mobile / release 


############################################################################################################################################################################################################################################################## 
#####    CHARACTERS    #######################################################################################################################################################################################################################################
##############################################################################################################################################################################################################################################################  


class Character < GamePiece
	attr_accessor :desires, :subtype
	def initialize(minimap,desires)   
		@minimap = minimap
		@desires = desires
		@subtype = subtype
		targets = subtype.concat(["person","character","soul"]).flatten
		@targets = targets
		moveset = (MOVES[1] + MOVES[6..8]).flatten
		@moveset = moveset
		profile = {:card => "#{subtype}#{minimap.flatten}" }
		@profile = profile
		def talk ; end
	end
	def backdrop	
		print ITEMS	
		x = ITEMS.find { |h| h[:item ].eql?(desires) } 
		print x													
		print "	   - A #{targets[0]} stands here too.\n\n" 					
	end	
	def give
		print "	   - Offer the #{targets[0]} what?"							
		print Rainbow(" > ").purple											
		offering = gets.chomp.downcase ; print("\n") ; sleep(2)
		x = ITEMS.find { |h| h[:item ].eql?(desires) } 
		if offering.eql?(desires) and ITEMS.include?(x) 
			if ITEMS.none?(profile)  
				ITEMS.delete(x[:item ]) # TODO FIX
				self.rewards_script
				ITEMS.push(profile)
			else print("	   - The #{targets[0]} politely declines.\n\n")
			end
		elsif offering.eql?(desires) and ITEMS.none?(x) 
			print "	   - The #{targets[0]} is interested,\n"		
			print "	     but you don't have one.\n\n"
		else print("	   - The #{targets[0]} isn't interested.\n\n")
		end	
	end	
	def hurt
		print "	   - This #{targets[0]} isn't an enemy.\n\n"			
	end						   									
end

